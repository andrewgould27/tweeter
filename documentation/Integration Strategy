We used GitHub to integrate code by asking each member to upload the code which was assigned at the beginning of the project cycle to GitHub, we might test and create lots of non-functioning branches, but the final version of the branch will be merged by the administrator. 
We believe that the strategy we are using for this Project 4 is the Sandwich Integration. Since the feature of our group work is having both bottom-up and top-down features. We partition modules into 2 groups. Once is to implement and integrate logic artifacts by top down, and another is to implement and integrate operational artifacts by bottom up. We assign our decision of changing the previous project 3 to each member, we make some generally situated at the beginning of the project cycle, and then we perform actual operations by specific files. We also have the Test interfaces between logic artifacts and operational artifacts. There’re the reasons why we believe we are using the Sandwich Integration Strategy for this project. The advantage of the strategy it brought to us is it can catch some major design faults in early stages. And there’s potentially reusable code artifacts that are adequately tested. Since we can and we did assign our task specifically, there’s Fault isolation when things went wrong and we can quickly understand the structure and logic of the file or function. Sandwich strategy can help us effectively find out the ways that are most suitable tasks for all of us by maximizing our strengths. 
